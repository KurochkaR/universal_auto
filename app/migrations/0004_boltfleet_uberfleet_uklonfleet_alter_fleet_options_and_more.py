# Generated by Django 4.0.5 on 2022-10-18 18:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('app', '0003_driver_filenameprocessed_fleet_ubertransactions_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BoltFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.CreateModel(
            name='UberFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.CreateModel(
            name='UklonFleet',
            fields=[
                ('fleet_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.fleet')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.fleet',),
        ),
        migrations.AlterModelOptions(
            name='fleet',
            options={'base_manager_name': 'objects'},
        ),
        migrations.AddField(
            model_name='fleet',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype'),
        ),
    ]
